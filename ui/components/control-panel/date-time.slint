import { TimerData } from "../../state.slint";
import { Globs, GlobCallbacks } from "../../globals.slint";
import { Slider } from "std-widgets.slint";
import { Utils, DigitPlace } from "../../utils.slint";
import { Palette } from "../../theme.slint";

import { DigitCell } from "../common/digitcell.slint";

component CPDigitCell inherits DigitCell {
	font-size: 42px;
	horizontal-alignment: center;
	stroke: #440000;
	stroke-width: 1px;
	width: 20px;
}

component CPDigitSeparator inherits CPDigitCell {
	font-size: 42px;
	text: "/";
	width: 21px;
}

export component DateTimeControls inherits Rectangle {
	in property <TimerData> timer: Globs.timer;
	background: Palette.bg_lcd;

	VerticalLayout {
		HorizontalLayout {
			padding: 8px;
			alignment: space-between;

			Rectangle {
				width: 34px;
				height: 34px;

				Image {
					source: Globs.state.is_paused ? @image-url("../../images/icons/play.svg") : @image-url("../../images/icons/pause.svg");
					height: 20px;
				}

				TouchArea {
					mouse-cursor: pointer;
					clicked => {
						GlobCallbacks.toggle_pause();
						debug(Globs.state.is_paused);
					}
				}
			}

			Rectangle {
				width: 85%;

				HorizontalLayout {
					alignment: space-between;

					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.month, DigitPlace.Ten);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.month, DigitPlace.One);
					}
					CPDigitSeparator {}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.day, DigitPlace.Ten);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.day, DigitPlace.One);
					}
					CPDigitSeparator {}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.year, DigitPlace.Thousand);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.year, DigitPlace.Hundred);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.year, DigitPlace.Ten);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.year, DigitPlace.One);
					}
					Rectangle {
						width: 20px;
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.hour, DigitPlace.Ten);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.hour, DigitPlace.One);
					}
					CPDigitCell {
						text: ":";
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.minute, DigitPlace.Ten);
					}
					CPDigitCell {
						text: Utils.date_int_to_char(timer.date.minute, DigitPlace.One);
					}
				}
				TouchArea {
					mouse-cursor: pointer;
					clicked => {
						GlobCallbacks.toggle_pause();
					}
				}
			}
		}
		HorizontalLayout {
			padding: 8px;
			Image {
				source: @image-url("../../images/icons/tortoise.svg");
				width: 34px;
			}
			Rectangle {
				width: 20px;
			}
			Slider {
				padding-left: 10px;
				maximum: 6;
				minimum: 0;
				step: 1;
				value: Globs.state.speed_index;
				changed(value) => {
					self.value = Math.round(value);
				}
				released(value) => {
					GlobCallbacks.speed_change(self.value);
				}
			}
			Rectangle {
				width: 20px;
			}
			Image {
				source: @image-url("../../images/icons/squirrel.svg");
				width: 34px;
			}
		}
	}
}
